import React, { useState } from 'react';
import { useQuery, useMutation } from 'react-query';
import api from '../../services/api';

const CreateTicketPage = () => {
  const [formData, setFormData] = useState({
    category_id: '',
    priority: 'medium',
    subject: '',
    description: ''
  });
  const [error, setError] = useState('');
  
  const navigate = (path) => console.log('Navigate to:', path);

  // Mock categories –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const mockCategories = [
    { category_id: 1, category_name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã' },
    { category_id: 2, category_name: '–ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π' },
    { category_id: 3, category_name: '–í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º' },
    { category_id: 4, category_name: '–î—Ä—É–≥–æ–µ' }
  ];

  const { data: categories } = useQuery('support-categories', () => 
    Promise.resolve({ data: mockCategories })
  );

  const createTicketMutation = useMutation(
    (ticketData) => {
      // Mock API call
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve({ data: { ticket_id: Date.now() } });
        }, 1000);
      });
    },
    {
      onSuccess: (response) => {
        navigate(`/support/tickets/${response.data.ticket_id}`);
      },
      onError: (error) => {
        setError(error.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è');
      }
    }
  );

  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (!formData.subject.trim() || !formData.description.trim()) {
      setError('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return;
    }

    setError('');
    createTicketMutation.mutate(formData);
  };

  const handleChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const priorityOptions = [
    { value: 'low', label: '–ù–ò–ó–ö–ò–ô', icon: 'üü¢', description: '–û–±—ã—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å' },
    { value: 'medium', label: '–°–†–ï–î–ù–ò–ô', icon: 'üü°', description: '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' },
    { value: 'high', label: '–í–´–°–û–ö–ò–ô', icon: 'üü†', description: '–°—Ä–æ—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å' },
    { value: 'critical', label: '–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô', icon: 'üî¥', description: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞' }
  ];

  const getProgressPercentage = () => {
    let filled = 0;
    if (formData.category_id) filled++;
    if (formData.priority) filled++;
    if (formData.subject.trim()) filled++;
    if (formData.description.trim()) filled++;
    return (filled / 4) * 100;
  };

  return (
    <div className="bg-gray-900 min-h-screen p-6">
      <div className="max-w-3xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8">
          <div className="bg-black border-4 border-orange-500 p-6 relative">
            <h1 className="text-3xl md:text-4xl font-black uppercase tracking-wider text-white text-center mb-4">
              <span className="text-orange-500">–°–û–ó–î–ê–¢–¨</span> –û–ë–†–ê–©–ï–ù–ò–ï
            </h1>
            <div className="w-full h-1 bg-orange-500 mb-4"></div>
            <p className="text-gray-300 font-bold text-center uppercase">
              –û–ü–ò–®–ò–¢–ï –í–ê–®–£ –ü–†–û–ë–õ–ï–ú–£ - –ú–´ –ü–û–ú–û–ñ–ï–ú!
            </p>
            
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="absolute top-2 left-2 w-4 h-4 border-2 border-orange-500"></div>
            <div className="absolute bottom-2 right-2 w-4 h-4 bg-orange-500"></div>
          </div>
        </div>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <div className="mb-8 bg-black border-4 border-white p-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-white font-black text-sm uppercase tracking-wider">
              –ü–†–û–ì–†–ï–°–° –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø:
            </span>
            <span className="text-orange-500 font-black text-sm">
              {Math.round(getProgressPercentage())}%
            </span>
          </div>
          <div className="w-full bg-gray-800 border-2 border-gray-600 h-3">
            <div 
              className="h-full bg-orange-500 transition-all duration-500"
              style={{ width: `${getProgressPercentage()}%` }}
            ></div>
          </div>
        </div>

        <div className="space-y-8">
          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
          <div className="bg-black border-4 border-white p-6">
            <label className="block text-white font-black text-sm uppercase tracking-wider mb-4">
              <span className="text-orange-500">üìÇ</span> –ö–ê–¢–ï–ì–û–†–ò–Ø –ü–†–û–ë–õ–ï–ú–´:
            </label>
            
            <div className="relative group">
              <select
                value={formData.category_id}
                onChange={(e) => handleChange('category_id', e.target.value)}
                className="w-full bg-white border-4 border-black px-4 py-4 font-black text-black uppercase tracking-wide
                           focus:outline-none focus:border-orange-500 focus:bg-orange-100
                           hover:bg-gray-100 transition-all duration-300 cursor-pointer appearance-none"
              >
                <option value="">–í–´–ë–ï–†–ò–¢–ï –ö–ê–¢–ï–ì–û–†–ò–Æ</option>
                {categories?.data?.map((category) => (
                  <option key={category.category_id} value={category.category_id}>
                    {category.category_name.toUpperCase()}
                  </option>
                ))}
              </select>
              
              {/* –ö–∞—Å—Ç–æ–º–Ω–∞—è —Å—Ç—Ä–µ–ª–∫–∞ */}
              <div className="absolute right-4 top-1/2 transform -translate-y-1/2 pointer-events-none">
                <div className="w-0 h-0 border-l-[8px] border-r-[8px] border-t-[8px] 
                                border-l-transparent border-r-transparent border-t-black"></div>
              </div>
              
              {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç */}
              <div className="absolute top-2 right-2 w-3 h-3 bg-orange-500 opacity-50 group-focus-within:opacity-100 transition-opacity"></div>
            </div>
          </div>

          {/* –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç */}
          <div className="bg-black border-4 border-white p-6">
            <label className="block text-white font-black text-sm uppercase tracking-wider mb-4">
              <span className="text-orange-500">üö®</span> –ü–†–ò–û–†–ò–¢–ï–¢ –û–ë–†–ê–©–ï–ù–ò–Ø:
            </label>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {priorityOptions.map((option) => (
                <div key={option.value} className="relative">
                  <input
                    type="radio"
                    id={option.value}
                    name="priority"
                    value={option.value}
                    checked={formData.priority === option.value}
                    onChange={(e) => handleChange('priority', e.target.value)}
                    className="sr-only"
                  />
                  <label
                    htmlFor={option.value}
                    className={`block p-4 border-4 cursor-pointer transition-all duration-300 transform hover:scale-105 ${
                      formData.priority === option.value
                        ? 'bg-orange-500 border-black text-black'
                        : 'bg-gray-900 border-gray-600 text-white hover:border-orange-500'
                    }`}
                  >
                    <div className="flex items-center gap-3">
                      <span className="text-xl">{option.icon}</span>
                      <div>
                        <div className="font-black text-lg uppercase tracking-wider">
                          {option.label}
                        </div>
                        <div className={`text-sm font-bold ${
                          formData.priority === option.value ? 'text-black' : 'text-gray-400'
                        }`}>
                          {option.description}
                        </div>
                      </div>
                    </div>
                  </label>
                </div>
              ))}
            </div>
          </div>

          {/* –¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è */}
          <div className="bg-black border-4 border-white p-6">
            <label className="block text-white font-black text-sm uppercase tracking-wider mb-4">
              <span className="text-orange-500">‚úèÔ∏è</span> –¢–ï–ú–ê –û–ë–†–ê–©–ï–ù–ò–Ø <span className="text-red-500">*</span>
            </label>
            
            <div className="relative group">
              <input
                type="text"
                value={formData.subject}
                onChange={(e) => handleChange('subject', e.target.value)}
                placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É"
                maxLength={255}
                required
                className="w-full bg-white border-4 border-black px-4 py-4 font-black text-black
                           focus:outline-none focus:border-orange-500 focus:bg-orange-100
                           hover:bg-gray-100 transition-all duration-300
                           placeholder:text-gray-500 placeholder:font-normal"
              />
              
              {/* –°—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤ */}
              <div className="absolute bottom-2 right-2 text-xs font-bold text-gray-400">
                {formData.subject.length}/255
              </div>
              
              {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç */}
              <div className="absolute top-2 right-8 w-3 h-3 bg-orange-500 opacity-50 group-focus-within:opacity-100 transition-opacity"></div>
            </div>
          </div>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã */}
          <div className="bg-black border-4 border-white p-6">
            <label className="block text-white font-black text-sm uppercase tracking-wider mb-4">
              <span className="text-orange-500">üìù</span> –ü–û–î–†–û–ë–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï <span className="text-red-500">*</span>
            </label>
            
            <div className="relative group">
              <textarea
                value={formData.description}
                onChange={(e) => handleChange('description', e.target.value)}
                placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å. –£–∫–∞–∂–∏—Ç–µ –≤—Å–µ –¥–µ—Ç–∞–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –Ω–∞–º —Ä–µ—à–∏—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –±—ã—Å—Ç—Ä–µ–µ."
                required
                rows={6}
                className="w-full bg-white border-4 border-black px-4 py-4 font-bold text-black resize-none
                           focus:outline-none focus:border-orange-500 focus:bg-orange-100
                           hover:bg-gray-100 transition-all duration-300
                           placeholder:text-gray-500 placeholder:font-normal"
              />
              
              {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç */}
              <div className="absolute top-2 right-2 w-3 h-3 bg-orange-500 opacity-50 group-focus-within:opacity-100 transition-opacity"></div>
            </div>

            {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
            <div className="mt-4 bg-blue-900 border-2 border-blue-500 p-3">
              <div className="text-blue-400 font-black text-xs uppercase tracking-wider mb-2">
                üí° –ü–û–î–°–ö–ê–ó–ö–ò –î–õ–Ø –ë–´–°–¢–†–û–ì–û –†–ï–®–ï–ù–ò–Ø:
              </div>
              <ul className="text-blue-300 text-xs space-y-1">
                <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –Ω–∏–º</li>
                <li>‚Ä¢ –û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –¥–µ–ª–∞–ª–∏ –ø–µ—Ä–µ–¥ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã</li>
                <li>‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã, –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç</li>
                <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å</li>
              </ul>
            </div>
          </div>

          {/* –û—à–∏–±–∫–∞ */}
          {error && (
            <div className="bg-red-900 border-4 border-red-500 p-4">
              <div className="flex items-center gap-3">
                <span className="text-red-500 text-xl">‚ö†Ô∏è</span>
                <span className="text-red-300 font-bold uppercase">{error}</span>
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex gap-4">
            <button
              onClick={handleSubmit}
              disabled={createTicketMutation.isLoading}
              className={`flex-1 py-6 font-black text-xl uppercase tracking-wider border-4 transition-all duration-300 transform
                ${createTicketMutation.isLoading
                  ? 'bg-gray-800 border-gray-600 text-gray-400 cursor-not-allowed'
                  : 'bg-orange-500 border-black text-black hover:bg-orange-400 hover:scale-105 active:scale-95'
                }`}
            >
              {createTicketMutation.isLoading ? (
                <div className="flex items-center justify-center gap-3">
                  <div className="w-6 h-6 border-2 border-gray-400 border-t-transparent rounded-full animate-spin"></div>
                  –°–û–ó–î–ê–ï–ú...
                </div>
              ) : (
                <>üöÄ –°–û–ó–î–ê–¢–¨ –û–ë–†–ê–©–ï–ù–ò–ï</>
              )}
            </button>

            <button
              onClick={() => navigate('/support')}
              className="px-8 py-6 bg-gray-800 border-4 border-white text-white font-black text-xl uppercase tracking-wider
                         hover:bg-white hover:text-black transition-all duration-300 transform hover:scale-105"
            >
              –û–¢–ú–ï–ù–ê
            </button>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ */}
          <div className="bg-black border-4 border-green-500 p-4">
            <div className="flex items-start gap-3">
              <span className="text-green-500 text-lg">‚è∞</span>
              <div className="text-gray-300 text-sm">
                <p className="font-bold uppercase mb-1 text-green-400">–í–†–ï–ú–Ø –û–¢–í–ï–¢–ê:</p>
                <ul className="text-xs normal-case space-y-1">
                  <li>‚Ä¢ <span className="font-bold">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:</span> –¥–æ 2 —á–∞—Å–æ–≤</li>
                  <li>‚Ä¢ <span className="font-bold">–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</span> –¥–æ 6 —á–∞—Å–æ–≤</li>
                  <li>‚Ä¢ <span className="font-bold">–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</span> –¥–æ 24 —á–∞—Å–æ–≤</li>
                  <li>‚Ä¢ <span className="font-bold">–ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</span> –¥–æ 72 —á–∞—Å–æ–≤</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CreateTicketPage;